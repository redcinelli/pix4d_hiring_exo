{"version":3,"sources":["index.js"],"names":["url","getDronesData","a","fetch","response","json","drones","map","drone","id","name","brand","camerabrand","camera","cameramodel","model","resolution","checkin","check_in","serialnumber","serial_number","addDrones","data","document","getElementById","value","myHeaders","Headers","append","checked","raw","JSON","stringify","requestOptions","method","headers","body","redirect","defaultColumnProperties","sortable","width","columns","key","sortDescendingFirst","c","Example","useState","rows","setRows","useEffect","x","wrapper","placeholder","type","onClick","e","preventDefault","rowGetter","i","rowsCount","length","minHeight","onGridSort","sortColumn","sortDirection","initialRows","sort","b","sortRows","rootElement","ReactDOM","render"],"mappings":"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","file":"static/js/main.4e400816.chunk.js","sourcesContent":["import './index.css';\n\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport ReactDataGrid from \"react-data-grid\";\n\n\nconst url = 'http://localhost:8000/drones/'\n\nasync function getDronesData(){\n\n  let response = await fetch(url);\n\n  let drones = await response.json();\n\n  return drones.map(drone =>{\n    return {\n      id: drone.id,\n      name: drone.name,\n      brand: drone.brand,\n      camerabrand: drone.camera.brand,\n      cameramodel: drone.camera.model,\n      resolution: drone.camera.resolution,\n      checkin: drone.check_in,\n      serialnumber: drone.serial_number\n    }\n  });\n}\n\nasync function addDrones(){\n  let data = {\n    name: document.getElementById(\"name\").value,\n    brand: document.getElementById(\"brand\").value,\n    serial_number: document.getElementById(\"serial\").value,\n    camera: {\n      model: document.getElementById(\"cameramodel\").value,\n      resolution: document.getElementById(\"cameraresolution\").value,\n      brand: document.getElementById(\"camerabrand\").value\n    }\n  }\n  var myHeaders = new Headers();\n  myHeaders.append(\"x-fakeauth-x\", document.getElementById(\"writeaccess\").checked ? 0:1 );\n  myHeaders.append(\"Content-Type\", \"application/json\");\n  \n  var raw = JSON.stringify(data)\n\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow'\n  };\n  \n  await fetch(url, requestOptions)\n}\n\nconst defaultColumnProperties = {\n  sortable: true,\n  width: 120\n};\n\nconst columns = [\n  {\n    key: \"id\",\n    name: \"ID\",\n    sortDescendingFirst: true\n  },\n  {\n    key: \"name\",\n    name: \"Name\"\n  },\n  {\n    key: \"brand\",\n    name: \"Brand\"\n  },\n  {\n    key: \"camerabrand\",\n    name: \"Camera Brand\"\n  },\n  {\n    key: \"cameramodel\",\n    name: \"Camera Model\"\n  },\n  {\n    key: \"resolution\",\n    name: \"Resolution\"\n  },\n  {\n    key: \"checkin\",\n    name: \"Check In\"\n  },\n  {\n    key: \"serialnumber\",\n    name: \"Serial Number\"\n  }\n].map(c => ({ ...c, ...defaultColumnProperties }));\n\n\nconst sortRows = (initialRows, sortColumn, sortDirection) => rows => {\n  const comparer = (a, b) => {\n    if (sortDirection === \"ASC\") {\n      return a[sortColumn] > b[sortColumn] ? 1 : -1;\n    } else if (sortDirection === \"DESC\") {\n      return a[sortColumn] < b[sortColumn] ? 1 : -1;\n    }\n  };\n  return sortDirection === \"NONE\" ? initialRows : [...rows].sort(comparer);\n};\n\nfunction Example() {\n  const [rows, setRows] = useState([]);\n\n  useEffect(async () => {\n    let x = await getDronesData()\n    setRows(x)\n  }, []);\n\n  const wrapper = async () => {\n    await addDrones()\n    let x = await getDronesData()\n    setRows(x)\n  }\n\n  return (\n    <div>\n      <form id=\"form\">\n        <input id=\"name\" placeholder=\"name\" type=\"text\"></input>\n        <input id=\"brand\" placeholder=\"brand\" type=\"text\"></input>\n        <input id=\"camerabrand\" placeholder=\"optical's brand\" type=\"text\"></input>\n        <input id=\"cameramodel\" placeholder=\"optical's model\" type=\"text\"></input>\n        <input id=\"cameraresolution\" placeholder=\"resolution\" type=\"text\"></input>\n        <input id=\"serial\" placeholder=\"serial\" type=\"text\"></input>\n        <label>Write access: </label>\n        <input id=\"writeaccess\" type=\"checkbox\"></input>\n        <button onClick={(e) => {e.preventDefault(); wrapper()} }>Save</button>\n      </form>\n      <ReactDataGrid\n        columns={columns}\n        rowGetter={i => rows[i]}\n        rowsCount={rows.length}\n        minHeight={500}\n        onGridSort={(sortColumn, sortDirection) =>\n          setRows(sortRows(rows, sortColumn, sortDirection))\n        }\n      />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Example />, rootElement);\n"],"sourceRoot":""}